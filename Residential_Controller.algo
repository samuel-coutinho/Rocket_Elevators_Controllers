DEFINE Column USING _numberFloors AND _numberOfElevators
    status: Online
    numberFloors: _numberFloors
    numberOfElevators: _numberOfElevators    
    ElevatorList: EMPTY LIST
    callButtonList: EMPTY LIST

    SEQUENCE createElevatorList USING _numberOfElevators
        FOR iterator FROM 1 TO _numberOfElevators
            INIT newElevator TO INSTANTIATE Elevator WITH iterator
            ADD newElevator TO ElevatorList
        ENDFOR
    ENDSEQUENCE

    SEQUENCE createcallButtonList USING _numberFloors
        FOR iterator FROM 1 TO _numberFloors            
            INIT newCallButton TO INSTANTIATE CallButon WITH None AND iterator
            ADD newCallButton TO callButtonList                
        ENDFOR
    ENDSEQUENCE

    SEQUENCE requestElevator WITH _requestedFloor AND _requestedDirection
        CALL findBestElevator WITH _requestedFloor AND _requestedDirection RETURNING bestElevator
        CALL goToDestinationFloor OF bestElevator WITH _requestedFloor AND _requestedDirection   
    ENDSEQUENCE 

    SEQUENCE requestFloor WITH _requestedFloor 
        IF _requestedFloor IS GREATER THAN currentFloor
            SET requestedDirection TO Down
        ELSE 
            SET requestedDirection TO Up
        ENDIF
        CALL goToDestinationFloor OF elvat WITH _requestedFloor AND _requestedDirection
    ENDSEQUENCE    

    SEQUENCE findBestElevator WITH _requestedFloor AND _requestedDirection RETURNING bestElevator
        SET shortestDistance TO _numberFloors
        SET bestElevator TO 0
        FOR EACH elevator in ElevatorList
            CALL calcDistanceToFloor OF elevator USING _requestedFloor RETURNING distance
            IF directon IS EQUAL _requestedDirection AND ABSOLUTE(currentFloor) IS GREATER THAN _requestedFloor THEN
                CALL calcShortestDistance WITH _distance AND shortestDistance RETURNING bestElevator
            ELSE IF directon IS EQUAL None AND bestElevator IS EQUAL 0 THEN
                CALL calcShortestDistance WITH _distance AND shortestDistance RETURNING bestElevator
            ELSE
                CALL calcShortestDistance WITH _distance AND shortestDistance RETURNING bestElevator
            ENDIF                
        ENDFOR
        RETURN bestElevator
    ENDSEQUENCE 

    SEQUENCE calcShortestDistance WITH _distance AND shortestDistance RETURNING bestElevator
        IF distance IS LESS OR EQUAL THAN shortestDistance
            SET shortestDistance TO distance
            SET bestElevator TO elevator
        ENDIF
    ENDSEQUENCE
ENDDEFINE

DEFINE Elevator USING _id
    ID: _id
    status: Online  
    directon: Nome
    currentFloor: 1
    doors: Closed   
    destinationList: EMPTY LIST
    
    SEQUENCE calcDistanceToFloor USING _requestedFloor RETURNING distance
        SET distance TO ABSOLUTE(_requestedFloor MINUS currentFloor)     
        RETURN distance
    ENDSEQUENCE

    SEQUENCE goToDestinationFloor WITH _requestedFloor AND _requestedDirection    
        ADD _requestedFloor TO destinationList     
        CALL moveElevatorToDestination
        CALL openDoors WITH bestElevator   // not implemented
        WAIT 5 seconds
        CALL closeDoors WITH bestElevator
    ENDSEQUENCE

    SEQUENCE moveElevatorToDestination
        SET destination TO READ destinationList[1]        
        IF currentFloor IS GREATER THAN destination
            SET direction TO Down            
        ELSE 
            SET direction TO Up             
        WHILE currentFloor IS NOT EQUAL destination
            CALL moveElevator WITH direction
            Call readCurrentFloor RETURNING currentFloor
            DISPLAY currentFloor
        ENDWHILE
        REMOVE destination FROM destinationList
        ROTATE destinationList LEFT 
    ENDSEQUENCE
ENDDEFINE

DEFINE callButton USING AND _direction AND _floor    
    direction: _direction
    floor: _floor
ENDDEFINE

---------------------------------------------------------TESTING SECTION------------------------------------------------------------------
_numberFloors AND _numberOfElevators
INIT column1 TO INSTANTIATE Column WITH 10, 2
_requestedFloor AND _requestedDirection
CALL requestElevator WITH 8 AND Up
CALL requestFloor WITH 5